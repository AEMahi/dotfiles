#!/usr/bin/env zsh

# -------------------------------- File Editing ---------------------------------------

# Open all files in current directory excluding...
alias va='$EDITOR $(fd -HItf --exclude .git --exclude .github --exclude Session.vim --exclude "Icon?")'

# Fuzzy Search all files in current directory, then open
alias vf='fzf --preview "bat -n --color=always {}" | xargs -r "$EDITOR"'

# Open vim/noevim workspace from Session file
[[ $EDITOR == 'vim' || $EDITOR == 'nvim' ]] && alias vs='$EDITOR -S Session.vim'

# Open vim using viminfo state file
alias vi='vim -i "$XDG_STATE_HOME/vim/viminfo"'

# Deletes temp file - NOTE this fixes neovim shada error, but unsure why this works...
alias refresh-shada='mv -f "$XDG_STATE_HOME/nvim/shada/main.shada.tmp.x" "$XDG_STATE_HOME/nvim/shada/main.shada"'

# -------------------------------- File Management & Previewing ---------------------------------------

# Move up 2 directories
alias ...="cd ../.."

# NOTE Ctrl + l is usual hotkey for clear but gets overriden with tmux and nvim
alias cl='clear'

# uses value of $GREP_COLOR
alias grep='grep --color=auto'

# List all directory items in long format with git info
alias l='eza --all --long --git --icons=always --group-directories-first'

# Print all directory items in colored tree format excluding git info
alias tree='tree -aCI ".git|.github"'

# Deletion
alias delete-ds-store='fd -HI .DS_Store / -x rm -f {} &>/dev/null'

# Fuzzy search man pages
alias docs='compgen -c | fzf | xargs man'

# -------------------------------- List Long Functions ---------------------------------------

# Outputs System info
alias list-sysinfo='system_profiler SPSoftwareDataType SPHardwareDataType'
alias list-shells='tail -n +5 /etc/shells'
alias list-users='dscl . list /Users | grep -v "^_"'

# Outputs Homebrew package info
alias list-brew-deps='brew deps --tree --installed'
alias list-brew-apps='print -l "$(brew list --cask)"'
alias list-brew-cmds='print -l "$(brew list --formula)"'

# Outputs PATH and FPATH
alias list-path='print -l "$path[@]"'
alias list-fpath='print -l "$fpath[@]"'

# Outputs Shell info
alias list-alias='alias | sort'
alias list-vars='env | sort'
alias list-funcs='print -l ${(ok)functions[(I)[^_]*]} | sort'
alias list-opts='setopt'

# Outputs Terminal color and syntax-highlighting info
alias list-256='for i in {0..255}; do print -Pn "%K{$i}  %k%F{$i}${(l:3::0:)i}%f " ${${(M)$((i%6)):#3}:+"\n"}; done'
alias list-highlighter='print -raC2 - "${(@kvq+)ZSH_HIGHLIGHT_STYLES}" | sort'

# -------------------------------- Workspace Management ---------------------------------------

# Create new tmux session
alias tn='tmux new-session'

# Prints all tmux sessions
alias tl='tmux-list-sessions'

# Attach to a tmux session found in tmux-list-sessions 
alias ta='tmux attach -t'

# Attach to last tmux session, if none then create new one
alias t='tmux attach || tmux new-session'

# Kills all tmux sessions
alias tks='tmux kill-server'

# -------------------------------- Version Control ---------------------------------------

# Commitizen
alias czc='cz commit'

# Git
alias ga='git add'
alias gaa='git add --all'
alias gb='git branch'
alias gcl='git clone --recurse-submodules'
alias gco='git checkout'
alias gd='git diff'
alias gds='git diff --staged'
alias gl='git pull'
alias glg='git log --graph --date=format:"%b-%d-%Y" --pretty="$GIT_PRETTY"'
alias gmg='git merge'
alias gmv='git mv'
alias gp='git push'
alias grm='git rm'
alias grs='git restore'
alias grst='git restore --staged'
alias grv='git remote --verbose'
alias gst='git status'

# -------------------------------- CLI tools ---------------------------------------

# MySQL launcher
alias mycli='mycli --myclirc "$XDG_CONFIG_HOME/mycli/config"'

# Print weather data
alias weather='curl wttr.in'

# AI launcher
alias chatgpt='python ~/Developer/chatgpt-cli/chatgpt.py --key=$(python ~/Developer/chatgpt-cli/auth-chatgpt-cli.py)'

# Sound toggler
alias sas-airpods='SwitchAudioSource -s "band4band"'
alias sas-speaker='SwitchAudioSource -s "CalDigit TS4 Audio - Rear"'
alias sas-macbook='SwitchAudioSource -s "MacBook Pro Speakers"'

# Remove macOS quarantine flag(s)
alias fix-spotify='sudo xattr -rd com.apple.quarantine /Applications/Spotify.app'

# -------------------------------- Extension Aliases ---------------------------------------

# special aliases that are triggered when a file name is passed as the command
# Ex: if the pdf file extension is aliased to `acroread` (a popular Linux pdf reader), when running `file.pdf` that file will be open with `acroread`

autoload -Uz is-at-least
if is-at-least 4.2.0; then
  # Opens urls in terminal using browser specified by $BROWSER
  if [[ -n "$BROWSER" ]]; then
    _browser_fts=(htm html de org net com at cx nl se dk)
    for ft in $_browser_fts; do alias -s $ft='$BROWSER'; done
  fi

  # Opens C, C++, Tex and text files using editor specified by $EDITOR
  _editor_fts=(cpp cxx cc c hh h inl asc txt TXT tex)
  for ft in $_editor_fts; do alias -s $ft='$EDITOR'; done

  # Opens images using image viewer specified by $XIVIEWER
  if [[ -n "$XIVIEWER" ]]; then
    _image_fts=(jpg jpeg png gif mng tiff tif xpm)
    for ft in $_image_fts; do alias -s $ft='$XIVIEWER'; done
  fi

  # Opens videos and other media using mplayer
  _media_fts=(ape avi flv m4a mkv mov mp3 mpeg mpg ogg ogm rm wav webm)
  for ft in $_media_fts; do alias -s $ft=mplayer; done

  # Reading Docs
  alias -s pdf=acroread   # Opens up a document using acroread
  alias -s ps=gv          # Opens up a .ps file using gv
  alias -s dvi=xdvi       # Opens up a .dvi file using xdvi
  alias -s chm=xchm       # Opens up a .chm file using xchm
  alias -s djvu=djview    # Opens up a .djvu file using djview

  # Listing files inside a packed file
  alias -s zip="unzip -l" # Lists files inside a .zip file
  alias -s rar="unrar l"  # Lists files inside a .rar file
  alias -s tar="tar tf"   # Lists files inside a .tar file
  alias -s tar.gz="echo " # Lists files inside a .tar.gz file
  alias -s ace="unace l"  # Lists files inside a .ace file
fi
